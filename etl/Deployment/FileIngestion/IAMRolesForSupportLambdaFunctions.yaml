Description: Creating permmissions for the support Lambda functions
Resources:
  LambdaCloudWatchLogsAndDataPipeline:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: LambdaCloudWatchLogsAndDataPipeline
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSDataPipeline_FullAccess
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
              - "lambda.amazonaws.com"
            Action:
            - "sts:AssumeRole"
  LambdaCloudWatchLogs:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: LambdaCloudWatchLogs
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
              - "lambda.amazonaws.com"
            Action:
            - "sts:AssumeRole"
  DataPipelineDeveloper:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: DataPipelineDeveloper
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
              - "elasticmapreduce.amazonaws.com"
              - "datapipeline.amazonaws.com"
            Action:
            - "sts:AssumeRole"
  DataPipelineDeveloperResource:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: DataPipelineDeveloperResource
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforDataPipelineRole
      - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
              - "ec2.amazonaws.com"
            Action:
            - "sts:AssumeRole"
  DataPipelineDeveloperResourceInstanceType:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: DataPipelineDeveloperResource
      InstanceProfileName: "DataPipelineDeveloperResource"
Outputs:
  LambdaCloudWatchLogsAndDataPipelineARN:
    Description: IAM Role for Lambda Function that needs access to CloudWatch Logs and Data Pipeline
    Export:
      Name: LambdaCloudWatchLogsAndDataPipelineARN
    Value:
      Fn::GetAtt:
      - LambdaCloudWatchLogsAndDataPipeline
      - Arn
  LambdaCloudWatchLogsARN:
    Description: IAM Role for Lambda Function that needs access to CloudWatch Logs
    Export:
      Name: LambdaCloudWatchLogsARN
    Value:
      Fn::GetAtt:
      - LambdaCloudWatchLogs
      - Arn
  DataPipelineDeveloperARN:
    Description: IAM Role for Data Pipeline Runner
    Export:
      Name: DataPipelineDeveloperARN
    Value:
      Fn::GetAtt:
      - DataPipelineDeveloper
      - Arn
  DataPipelineDeveloperResourceARN:
    Description: IAM Role for Data Pipeline Resource Runner
    Export:
      Name: DataPipelineDeveloperResourceARN
    Value:
      Fn::GetAtt:
      - DataPipelineDeveloperResource
      - Arn
  LambdaCloudWatchLogsAndDataPipeline:
    Description: IAM Role for Lambda Function that needs access to CloudWatch Logs and Data Pipeline
    Export:
      Name: LambdaCloudWatchLogsAndDataPipeline
    Value:
      Ref: LambdaCloudWatchLogsAndDataPipeline
  LambdaCloudWatchLogs:
    Description: IAM Role for Lambda Function that needs access to CloudWatch Logs
    Export:
      Name: LambdaCloudWatchLogs
    Value:
      Ref: LambdaCloudWatchLogs
  DataPipelineDeveloper:
    Description: IAM Role for Data Pipeline Runner
    Export:
      Name: DataPipelineDeveloper
    Value:
      Ref: DataPipelineDeveloper
  DataPipelineDeveloperResource:
    Description: IAM Role for Data Pipeline Resource Runner
    Export:
      Name: DataPipelineDeveloperResource
    Value:
      Ref: DataPipelineDeveloperResource
